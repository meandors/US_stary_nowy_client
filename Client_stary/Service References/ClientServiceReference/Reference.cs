//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client_stary.ClientServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Client", Namespace="http://schemas.datacontract.org/2004/07/WCF_stara_nowa_usluga")]
    [System.SerializableAttribute()]
    public partial class Client : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NazwiskoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Imie {
            get {
                return this.ImieField;
            }
            set {
                if ((object.ReferenceEquals(this.ImieField, value) != true)) {
                    this.ImieField = value;
                    this.RaisePropertyChanged("Imie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nazwisko {
            get {
                return this.NazwiskoField;
            }
            set {
                if ((object.ReferenceEquals(this.NazwiskoField, value) != true)) {
                    this.NazwiskoField = value;
                    this.RaisePropertyChanged("Nazwisko");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ClientServiceReference.IUsluga")]
    public interface IUsluga {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsluga/GetClients", ReplyAction="http://tempuri.org/IUsluga/GetClientsResponse")]
        Client_stary.ClientServiceReference.Client[] GetClients();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsluga/GetClients", ReplyAction="http://tempuri.org/IUsluga/GetClientsResponse")]
        System.Threading.Tasks.Task<Client_stary.ClientServiceReference.Client[]> GetClientsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsluga/GetClient", ReplyAction="http://tempuri.org/IUsluga/GetClientResponse")]
        Client_stary.ClientServiceReference.Client GetClient(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsluga/GetClient", ReplyAction="http://tempuri.org/IUsluga/GetClientResponse")]
        System.Threading.Tasks.Task<Client_stary.ClientServiceReference.Client> GetClientAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsluga/AddClient", ReplyAction="http://tempuri.org/IUsluga/AddClientResponse")]
        void AddClient(Client_stary.ClientServiceReference.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsluga/AddClient", ReplyAction="http://tempuri.org/IUsluga/AddClientResponse")]
        System.Threading.Tasks.Task AddClientAsync(Client_stary.ClientServiceReference.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsluga/ModifyClient", ReplyAction="http://tempuri.org/IUsluga/ModifyClientResponse")]
        void ModifyClient(Client_stary.ClientServiceReference.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsluga/ModifyClient", ReplyAction="http://tempuri.org/IUsluga/ModifyClientResponse")]
        System.Threading.Tasks.Task ModifyClientAsync(Client_stary.ClientServiceReference.Client client);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUslugaChannel : Client_stary.ClientServiceReference.IUsluga, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UslugaClient : System.ServiceModel.ClientBase<Client_stary.ClientServiceReference.IUsluga>, Client_stary.ClientServiceReference.IUsluga {
        
        public UslugaClient() {
        }
        
        public UslugaClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UslugaClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UslugaClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UslugaClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Client_stary.ClientServiceReference.Client[] GetClients() {
            return base.Channel.GetClients();
        }
        
        public System.Threading.Tasks.Task<Client_stary.ClientServiceReference.Client[]> GetClientsAsync() {
            return base.Channel.GetClientsAsync();
        }
        
        public Client_stary.ClientServiceReference.Client GetClient(int id) {
            return base.Channel.GetClient(id);
        }
        
        public System.Threading.Tasks.Task<Client_stary.ClientServiceReference.Client> GetClientAsync(int id) {
            return base.Channel.GetClientAsync(id);
        }
        
        public void AddClient(Client_stary.ClientServiceReference.Client client) {
            base.Channel.AddClient(client);
        }
        
        public System.Threading.Tasks.Task AddClientAsync(Client_stary.ClientServiceReference.Client client) {
            return base.Channel.AddClientAsync(client);
        }
        
        public void ModifyClient(Client_stary.ClientServiceReference.Client client) {
            base.Channel.ModifyClient(client);
        }
        
        public System.Threading.Tasks.Task ModifyClientAsync(Client_stary.ClientServiceReference.Client client) {
            return base.Channel.ModifyClientAsync(client);
        }
    }
}
